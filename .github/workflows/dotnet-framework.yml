name: Build .NET Framework 4.8
on:
  push:
    tags: 
      - "v*"

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Process Version from Tag
      id: version
      uses: ncipollo/semantic-version-action@v1
    
    - name: Update Version in AssemblyInfo.cs
      env:
        BUILD_VERSION: ${{ steps.version.outputs.tag }}
      run: .\.github\workflows\UpdateAssemblyInfo.ps1
    
    - name: Write Version to Text File
      env:
        BUILD_VERSION: ${{ steps.version.outputs.tag }}
      run: |
        echo "source: ${Env:GITHUB_REPOSITORY}" > "${Env:GITHUB_WORKSPACE}\VERSION.md"
        echo "version: ${Env:BUILD_VERSION}" >> "${Env:GITHUB_WORKSPACE}\VERSION.md"
        echo "commit: ${Env:GITHUB_SHA}" >> "${Env:GITHUB_WORKSPACE}\VERSION.md"
        echo "date: $((Get-Date -format r).ToString())" >> "${Env:GITHUB_WORKSPACE}\VERSION.md"
    
    - name: Install NuGet
      uses: nuget/setup-nuget@v1
    
    - name: Configure NuGet Sources
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        nuget sources add -Name "GitHub/TheManta" -Source "https://nuget.pkg.github.com/TheManta/index.json" -UserName "${Env:GITHUB_ACTOR}" -Password "${Env:GITHUB_TOKEN}"

    - uses: actions/cache@v1
      id: cache
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

    - name: Restore NuGet Packages
      if: steps.cache.outputs.cache-hit != 'true'
      run: nuget restore -LockedMode ${Env:GITHUB_WORKSPACE}

    - name: Build with .NET Framework 4.8
      run: |
        cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
           .\MSBuild.exe "${Env:GITHUB_WORKSPACE}\" /p:RestoreLockedMode=true /p:Configuration=Release
    
    - name: Package Artifacts
      env:
        BUILD_VERSION: ${{ steps.version.outputs.tag }}
      run: |
        $BuildName = (gci *.sln)[0].BaseName
        7z a "${BuildName}-${Env:BUILD_VERSION}.zip" "${Env:GITHUB_WORKSPACE}\${BuildName}\bin\Release\" "-xr!*.pdb" "-mx=7"
        7z rn "${BuildName}-${Env:BUILD_VERSION}.zip" "Release" "${BuildName}"
    
    - name: Publish to NuGet Feed
      run: nuget push "${Env:GITHUB_WORKSPACE}\${BuildName}\*.nupkg" --skip-duplicate --no-symbols true
    
    - name: Publish to GitHub Releases
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          *.zip
